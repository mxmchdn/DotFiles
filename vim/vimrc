call plug#begin('~/.vim/plugged')

" Mappings
Plug 'scrooloose/nerdcommenter'
Plug 'romainl/vim-qf'

" Navigation
Plug 'mileszs/ack.vim'

" Theme
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" IDE features
Plug 'vim-test/vim-test'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'preservim/nerdtree'

" Filetype specific plugins
Plug '5long/pytest-vim-compiler'
Plug 'hashivim/vim-terraform'

" Tags management
Plug 'ludovicchabant/vim-gutentags'
Plug 'szw/vim-tags'

call plug#end()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin parameter

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let g:airline_powerline_fonts=1
"let g:airline_left_sep = ''
"let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''


let g:airline_theme='jellybeans'

let g:Powerline_symbols='unicode'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Writing

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Reload a file when it's changed from the outside
set autoread

" Write the file when we leave the buffer
set autowrite

" Force encoding to utf-8
set encoding=utf-8

" Automatically detect rxvt-unicode-256color
set term=xterm-256color

set encoding=utf-8

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" User interface

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Make backspace behave as expected
set backspace=eol,indent,start

" Set the minimal amount of lines under and above the cursor j/k
set scrolloff=5

" Show curent mode
set showmode

" Show command executed
set showcmd

" show line number
set number

" Always show status line
set laststatus=2

" Enhance cli completion
set wildmenu

" Set completion behavior
set wildmode=longest:full,list:full

" Disable bell completely
set visualbell
set t_vb=

" Color the column after textwidth, usually the 80th
if version >= 703
    set colorcolumn=+1
endif

" Display whitespace characters
set list
set listchars=tab:>─,eol:¬,trail:\ ,nbsp:¤
set fillchars=vert:│

" Enables synthax highlighting
syntax on

" Enable Dowygen highlighting
let g:load_doxygen_syntax=1

" Allow mouse in vim
set mouse=a

" Briefly show matching braces, parents, ...
set showmatch

" Enable line wrapping
set wrap

" Wrap on column 80
set textwidth=79

" Disable preview window on completion
set completeopt=longest,menuone

" Highlight current line
set cursorline 

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Search options

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Ignore case on search
set ignorecase

" Ignore case unless there is an uppercase letter in the pattern
set smartcase

" Move cursor to the matched string
set incsearch

" Don't highlighting matched stings
set nohlsearch

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Indentation options

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" The length of a tab 
set tabstop=4

" The number of spaces inserted/rm when using < or >
set shiftwidth=4

" The number of spaces inserted when you press tab
set softtabstop=-1

" Insert spaces intead of tabs
set expandtab

" When tabbing manually, use shiftwidth instead of tabstop and softtabstop
set smarttab

" Set basic indenting
set autoindent

set cinoptions=(0,u0,U0,t0,g0,N-s


"####################################################"

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Colors

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Use a slightly darker bg color to differentiate with the status line
let g:jellybeans_color_256='232'

" ColorScheme of vim
colorscheme jellybeans

set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/

" Always show statusline
set laststatus=2

" Use 256 colours (Use this setting only if your terminal supports 256 colours)
set t_Co=256

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Keysym / maps

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Nerdtree toggle
map <C-o> :NERDTreeToggle<CR>

" Disable Ack.vim's mappings on the quickfix and location list windows
" We use vim-qf mappings instead
let g:ack_apply_qmappings = 0
let g:ack_apply_lmappings = 0
let g:qf_mapping_ack_style = 1

" Override unimpaired quickfix and loc-list mappings to use vim-qf wrapparound
let g:nremap = {"[q": "", "]q": "", "[l": "", "]l": ""}
nmap [q <Plug>(qf_qf_previous)
nmap ]q <Plug>(qf_qf_next)
nmap [l <Plug>(qf_loc_previous)
nmap ]l <Plug>(qf_loc_next)

" Launch fugitive's gstatus
noremap <leader>gs :Gstatus<cr>

" Mappings for vim-test
nmap <silent> <leader>ts :TestSuite<cr>

" Tell vim-test to use dispatch to run our tests
let test#strategy = "dispatch"

" Tell Dispatch to use the pytest compiler when we call pytest (the compiler
" file looks for py.test instead of pytest)
let g:dispatch_compilers = {'pytest': 'pytest'}

" Set "," as map leader
let mapleader = ","

" Write as root, when you forgot to sudoedit
cnoreabbrev w!! w !sudo tee % >/dev/null

" map ; to :
noremap ; :

" Open the quickfix window if there are errors, or close it if there are no
" errors left
noremap <leader>cw :botright :cw<cr>

" Run make silently, then skip the 'Press ENTER to continue'
noremap <leader>m :silent! :make! \| :redraw!<cr>

" Resize window
nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>
